name: 'Terraform Test'

on:
  push:
#   pull_request:
# # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_ID  }}
        aws-secret-access-key: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_SECRET }}
        aws-region: eu-west-2

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Terraform Init
      run: terraform init -backend-config="bucket=crnccd-s3-terraform-state" -backend-config="key=frf/dev/terraform.tfstate"
        
    # Checks Terraform configuration valid
    - name: Terraform Validate
      run: terraform validate

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Plan
      run: terraform plan -var="env=dev" 


   # Test environment does not require approval
   # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks

    # - name: Terraform Apply
    #   run: terraform apply -var="env=dev" -auto-approve